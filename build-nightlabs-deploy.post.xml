<project default="deploy.post">
	<target name="deploy.post" depends="init">

		<!-- delete possibly existing old versions -->
		<delete dir="${j2ee.deploy.dir}/${j2ee.deploy.subdir}/NightLabsHTMLContent.ear" />

		<antcall target="deploy.j2ee.impl" />

	</target>


	<!-- set a value for the given property if it is
	     not already set -->
	<macrodef name="setdefault">
		<attribute name="property" />
		<attribute name="value" />
		<sequential>
			<condition property="@{property}" value="@{value}">
				<not>
					<isset property="@{property}" />
				</not>
			</condition>
		</sequential>
	</macrodef>


	<!-- Initialize all needed properties -->
	<target name="init">
		<!-- Set the name of this file. Is there another way?? -->
		<property name="build.file" value="build-nightlabs.xml" />

		<!-- Read properties and xml files -->
		<property file="build.properties" />
		<property file="build-nightlabs.properties" />
		<property file="build-nightlabs-path.properties" />
		<xmlproperty file=".project" collapseAttributes="true" />

		<!-- Initialize used properties to default values -->
		<setdefault property="javac.debug" value="true" />
		<!-- java compiler option: source (e.g. "1.3", "1.4", "1.5") -->
		<setdefault property="javac.source" value="6" />
		<!-- java compiler option: target (e.g. "1.3", "1.4", "1.5") -->
		<setdefault property="javac.target" value="${javac.source}" />
		<!-- set src.dir to "src" if not already defined -->
		<setdefault property="src.dir" value="src" />
		<!-- set ejbsrc.dir to "ejbsrc" if not already defined -->
		<setdefault property="ejbsrc.dir" value="ejbsrc" />
		<!-- set bin.dir to "bin" if not already defined -->
		<setdefault property="bin.dir" value="bin" />
		<!-- set lib.dir to "lib" if not already defined -->
		<setdefault property="lib.dir" value="lib" />
		<!-- set project.dir to "." if not already defined -->
		<setdefault property="project.dir" value="." />
		<!-- set lib.dir to "lib" if not already defined -->
		<setdefault property="lib.dir" value="lib" />
		<!-- set dist.dir to "dist" if not already defined -->
		<setdefault property="dist.dir" value="dist" />
		<!-- use the plugin-id from plugin.xml as project.name
         if not already defined. -->
		<condition property="project.name" value="${projectDescription.name}">
			<and>
				<not>
					<isset property="project.name" />
				</not>
				<isset property="projectDescription.name" />
			</and>
		</condition>
		<!-- set meta.dir to project.name if not defined -->
		<setdefault property="meta.dir" value="${project.name}" />
		<!-- set project.jar to "${project.name}.jar" if not already defined -->
		<condition property="project.jar" value="${project.name}.jar">
			<and>
				<not>
					<isset property="project.jar" />
				</not>
				<isset property="project.name" />
			</and>
		</condition>
		<!-- set j2ee.war.enable to false if not already defined -->
		<setdefault property="j2ee.war.enable" value="false" />
		<setdefault property="web.deploy.name" value="${project.name}" />
		<!-- set project.war to "${project.name}.war" if not already defined -->
		<condition property="project.war" value="${web.deploy.name}.war">
			<and>
				<not>
					<isset property="project.war" />
				</not>
				<isset property="web.deploy.name" />
			</and>
		</condition>
		<!-- set j2ee.rar.enable to false if not already defined -->
		<setdefault property="j2ee.rar.enable" value="false" />
		<!-- set project.rar to "${project.name}.rar" if not already defined -->
		<condition property="project.rar" value="${project.name}.rar">
			<and>
				<not>
					<isset property="project.rar" />
				</not>
				<isset property="project.name" />
			</and>
		</condition>
		<!-- set j2ee.client.enable to false if not already defined -->
		<setdefault property="j2ee.client.enable" value="false" />
		<!-- set j2ee.client.jar to "${project.name}-client.jar" if not already defined -->
		<setdefault property="j2ee.client.jar" value="${project.name}-client.jar" />
		<!-- set j2ee.ear to "${project.name}.ear" if not already defined -->
		<condition property="j2ee.ear" value="${project.name}.ear">
			<and>
				<not>
					<isset property="j2ee.ear" />
				</not>
				<isset property="project.name" />
			</and>
		</condition>
		<!-- set dist.dir to "dist" if not already defined -->
		<setdefault property="j2ee.deployear.includes" value="${project.jar},${project.war},${project.rar}" />
		<setdefault property="j2ee.deployear.excludes" value="" />

		<setdefault property="j2ee.deployear.lib.includes" value="" />
		<setdefault property="j2ee.deployear.lib.excludes" value="" />

		<!--  Don't set default for deplaysubdir.includes/excludes so per default nothing is copied
    <setdefault property="j2ee.deploysubdir.includes" value="*.xml" />
    <setdefault property="j2ee.deploysubdir.excludes" value="application.xml" />
	-->
		<setdefault property="j2ee.deploymetainf.includes" value="application.xml" />
		<setdefault property="j2ee.deploymetainf.excludes" value="" />

		<setdefault property="j2ee.jpoxenhance.enable" value="false" />
		<setdefault property="j2ee.xdoclet.jdodoclet.enable" value="false" />
		<setdefault property="j2ee.xdoclet.ejbdoclet.enable" value="false" />

		<setdefault property="j2ee.deploy.enable" value="true" />
		<setdefault property="web.deploy.enable" value="false" />
		<setdefault property="web.deployaswar.enable" value="true" />
		<setdefault property="web.deploy.dir" value="${j2ee.deploy.dir}" />

		<setdefault property="dist.bin.includes" value="**/*" />
		<setdefault property="dist.bin.excludes" value="**/log4j.*" />

		<setdefault property="debug.properties" value="false" />
	</target>

	<!-- deploy all from j2ee.deploy.includes to the server -->
	<target name="deploy.j2ee.impl">
		<mkdir dir="${j2ee.deploy.dir}/${j2ee.deploy.subdir}" />
		<copy todir="${j2ee.deploy.dir}/${j2ee.deploy.subdir}">
			<fileset dir="${project.dir}/${dist.dir}" includes="${j2ee.deploysubdir.includes}" excludes="${j2ee.deploysubdir.excludes}" />
		</copy>
		<mkdir dir="${j2ee.deploy.dir}/${j2ee.deploy.subdir}/${j2ee.ear}" />
		<copy todir="${j2ee.deploy.dir}/${j2ee.deploy.subdir}/${j2ee.ear}">
			<fileset dir="${project.dir}/${dist.dir}" includes="${j2ee.deployear.includes}" excludes="${j2ee.deployear.excludes}" />
		</copy>
		<copy todir="${j2ee.deploy.dir}/${j2ee.deploy.subdir}/${j2ee.ear}" failonerror="false">
			<fileset dir="${project.dir}/${lib.dir}" includes="${j2ee.deployear.lib.includes}" excludes="${j2ee.deployear.lib.excludes}" />
		</copy>
		<mkdir dir="${j2ee.deploy.dir}/${j2ee.deploy.subdir}/${j2ee.ear}/META-INF" />
		<copy todir="${j2ee.deploy.dir}/${j2ee.deploy.subdir}/${j2ee.ear}/META-INF">
			<fileset dir="${project.dir}/${dist.dir}" includes="${j2ee.deploymetainf.includes}" excludes="${j2ee.deploymetainf.excludes}" />
		</copy>
		<delete verbose="true" includeemptydirs="true">
			<fileset dir="${j2ee.deploy.dir}/${j2ee.deploy.subdir}/${j2ee.ear}" includes="META-INF" />
		</delete>
	</target>

</project>